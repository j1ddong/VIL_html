{"version":3,"sources":["../src/utils/input.utils.ts"],"sourcesContent":["import * as readline from \"readline\";\n\nexport const waitForUserInput = (question?: string): Promise<string> => {\n  const rl = readline.createInterface({ input: process.stdin, output: process.stdout });\n\n  return new Promise((resolve) =>\n    rl.question(question ? `>> ${question}: ` : \">> \", (ans) => {\n      rl.close();\n      resolve(ans);\n    }),\n  );\n};\n\nexport const waitForKeyPress = (question?: string): Promise<{ name: string; ctrl: boolean }> => {\n  readline.emitKeypressEvents(process.stdin);\n  process.stdin.setRawMode(true);\n\n  return new Promise((resolve) => {\n    const listener = (_key: string, data: { name: string; ctrl: boolean }) => {\n      process.stdin.setRawMode(false);\n      process.stdin.off(\"keypress\", listener);\n      process.stdin.pause();\n      resolve(data);\n    };\n    process.stdout.write(question ? `>> ${question}: ` : \">> \");\n    process.stdin.resume();\n    process.stdin.on(\"keypress\", listener);\n  });\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA0B;AAEnB,IAAM,mBAAmB,CAAC,aAAuC;AACtE,QAAM,KAAc,yBAAgB,EAAE,OAAO,QAAQ,OAAO,QAAQ,QAAQ,OAAO,CAAC;AAEpF,SAAO,IAAI;AAAA,IAAQ,CAAC,YAClB,GAAG,SAAS,WAAW,MAAM,QAAQ,OAAO,OAAO,CAAC,QAAQ;AAC1D,SAAG,MAAM;AACT,cAAQ,GAAG;AAAA,IACb,CAAC;AAAA,EACH;AACF;AAEO,IAAM,kBAAkB,CAAC,aAAgE;AAC9F,EAAS,4BAAmB,QAAQ,KAAK;AACzC,UAAQ,MAAM,WAAW,IAAI;AAE7B,SAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,UAAM,WAAW,CAAC,MAAc,SAA0C;AACxE,cAAQ,MAAM,WAAW,KAAK;AAC9B,cAAQ,MAAM,IAAI,YAAY,QAAQ;AACtC,cAAQ,MAAM,MAAM;AACpB,cAAQ,IAAI;AAAA,IACd;AACA,YAAQ,OAAO,MAAM,WAAW,MAAM,QAAQ,OAAO,KAAK;AAC1D,YAAQ,MAAM,OAAO;AACrB,YAAQ,MAAM,GAAG,YAAY,QAAQ;AAAA,EACvC,CAAC;AACH;","names":[]}